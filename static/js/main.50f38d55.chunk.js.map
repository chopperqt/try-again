{"version":3,"sources":["Components/Game/index.jsx","Components/Game/Game.jsx","Components/Button/index.jsx","Components/Button/Button.jsx","Components/Leader-Board/index.jsx","Components/Leader-Board/LeaderBoard.jsx","Components/Lose-Board/index.jsx","Components/Lose-Board/LoseBoard.jsx","Components/Rules/index.jsx","Components/Rules/Rules.jsx","App.js","reportWebVitals.js","index.js"],"names":["Game","useState","gameMode","setGameMod","numberPerLevel","setNumberPerLevel","numbersArray","setNumbersArray","userNumbersArray","setUserNumbersArray","activateSteps","setActivateSteps","protectWall","setProtectWall","level","setLevel","scores","setScores","protect","setProtect","isRed","setIsRed","isGreen","setIsGreen","isBlue","setIsBlue","isYellow","setIsYellow","userName","setUserName","step","setStep","topInfo","setTopInfo","filterGameMode","genrerateRandomNumber","npl","i","num","Math","round","random","prev","lockButtons","clearsValues","getNumberButton","e","target","value","animationGameMode","useEffect","document","querySelector","style","top","transition","length","join","getFactorNumber","id","setTimeout","console","log","showSequence","className","closeBoard","toHome","removeAttribute","toRestart","hide","display","type","onFocus","onBlur","onChange","placeholder","onClick","changeGameMode","href","rel","class","role","aria-label","slice","click","color","isActive","Button","background","disabled","LeaderBoard","fontWeight","LoseBoard","Rules","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50f38d55.chunk.js","sourcesContent":["import Game from './Game';\n\nexport default Game;","import {useState, useEffect, useMemo } from 'react';\n\nimport './style.scss';\n\nimport {\n    Button,\n    LeaderBoard,\n    LoseBoard,\n    Rules\n} from '../../Components/';\n\nconst Game = () => {\n    const [gameMode, setGameMod] = useState(3);\n\n    const [numberPerLevel, setNumberPerLevel] = useState(3); //default value = 5\n\n    const [numbersArray, setNumbersArray] = useState([]);\n    const [userNumbersArray, setUserNumbersArray] = useState([]);\n\n    const [activateSteps, setActivateSteps] = useState(false);\n\n    const [protectWall, setProtectWall] = useState(true);\n\n    const [level, setLevel] = useState(1);\n\n    const [scores, setScores] = useState(1);\n\n    const [protect, setProtect] = useState(true);\n\n    const [isRed, setIsRed] = useState(true);\n    const [isGreen, setIsGreen] = useState(true);\n    const [isBlue, setIsBlue] = useState(true);\n    const [isYellow, setIsYellow] = useState(true);\n\n    const [userName, setUserName] = useState('');\n\n    const [step, setStep] = useState(0);\n\n    const [topInfo, setTopInfo] = useState(125); \n\n    const changeGameMode = (num) => {\n        if (num) {\n            switch (num) {\n                case 3:\n                    setGameMod(prev => prev + 1);\n                    break;\n                case 4:\n                    setGameMod(prev => prev + 1);\n                    break;\n                case 5:\n                    setGameMod(prev => prev + 1);\n                    break;\n                case 6:\n                    setGameMod(prev => prev + 1);\n                    break;\n                case 7:\n                    setGameMod(prev => prev + 1);\n                    break;\n                default:\n                    setGameMod(3)\n                    break;\n            }\n        }\n\n        animationGameMode();\n\n    }\n\n    const filterGameMode = () => {\n        switch (gameMode) {\n            case 4:\n                return 4;\n            case 5:\n                return 5;\n            case 6:\n                return 6;\n            case 7:\n                return 7;\n            case 8:\n                return 8;\n            default:\n                return 3;\n        }\n    }\n\n    const getFactorNumber = () => {\n        switch (gameMode) {\n            case 4:\n                return 2.5;\n            case 5:\n                return 3;\n            case 6:\n                return 3.5;\n            case 7:\n                return 4;\n            case 8:\n                return 4.5;\n            default:\n                return 2;\n        }\n    }\n\n    const genrerateRandomNumber = (npl) => {\n        const min = 1;\n        const max = 4;\n\n        let result = [];\n        \n        for (let i = 0; i < npl; i++) {\n            let num = Math.round(min + Math.random() * (max - min * 0.5));\n            setNumbersArray(prev => [...prev, num])\n        }\n\n        return result;\n    }\n\n    const lockButtons = () => {\n        setIsRed(true);\n        setIsGreen(true);\n        setIsBlue(true);\n        setIsYellow(true)\n    }\n\n    const unlockButtons = () => {\n        setIsRed(false);\n        setIsGreen(false);\n        setIsBlue(false);\n        setIsYellow(false)\n    }\n\n    const clearsValues = () => {\n        setNumbersArray([]);\n        setUserNumbersArray([]);\n        setStep(0);\n    } \n\n    const clearPoints = () => {\n        setLevel(1);\n    }\n\n    const startGame = () => {\n        //Анимации\n        let interfaceDiv = document.querySelector('.interface');\n\n        interfaceDiv.id = \"fade-out\"\n\n        if (!userName) {\n            setUserName(\"Аноним\")\n        }\n\n        setTimeout(() => {\n            setProtect(false);\n        }, 1000)\n\n        setLevel(1);\n\n        setScores(1);\n\n        setTimeout(() => {\n            setActivateSteps(true)\n        }, 500)\n\n    }\n\n    const showSequence = () => {\n        console.log(`Подсказочка для разработчика ${numbersArray} , step ${step}`)\n\n        switch (numbersArray[step]) {\n            case 1:\n                setIsRed(prev => !prev)\n                break;\n            case 2:\n                setIsGreen(prev => !prev)\n                break;\n            case 3:\n                setIsBlue(prev => !prev)\n                break;\n            case 4:\n                setIsYellow(prev => !prev)\n                break;\n            default:\n                break;\n        }\n\n        setTimeout(() => {\n            switch (numbersArray[step]) {\n                case 1:\n                    setIsRed(prev => !prev);\n                    setStep(prev => prev + 1)\n                    break;\n                case 2:\n                    setIsGreen(prev => !prev)\n                    setStep(prev => prev + 1)\n                    break;\n                case 3:\n                    setIsBlue(prev => !prev)\n                    setStep(prev => prev + 1)\n                    break;\n                case 4:\n                    setIsYellow(prev => !prev)\n                    setStep(prev => prev + 1)\n                    break;\n                default:\n                    break;\n            }\n        }, 500 )\n    }\n\n    const getNumberButton = (e) => {\n        setUserNumbersArray(prev => [...prev, +e.target.value]);\n    }\n\n    const closeLeaderBoard = () => {\n        let btn = document.querySelector(\".close__leader_i\");\n\n        btn.id = \"animate-close\";\n        \n        setTimeout(() => {\n            document.querySelector('.leader-board').id = \"hide-leader-board\";\n        }, 800)\n    }\n\n    const openLeaderBoard = () => {\n        document.querySelector('.leader-board').id = \"animate-leader-board\";\n\n        let btn = document.querySelector(\".close__leader_i\");\n\n        btn.id = \"animate-close-in\";\n    }\n\n    const clickHome = () => {\n        document.querySelector('.lose-board').id = \"hide-lose-board\";\n        document.querySelector('.interface').removeAttribute('id');\n        setProtect(prev => !prev);\n    }\n\n    const restartGame = () => {\n        document.querySelector('.lose-board').id = \"hide-lose-board\";\n\n        lockButtons();\n        \n        setScores(0);\n\n        setTimeout(() => {\n            clearPoints();\n        }, 1200)\n\n        setTimeout(() => {\n            setActivateSteps(true)\n        }, 2000)\n    }\n\n\n    const filterName = () => {\n        if (userName.length > 10) {\n            let str = userName.slice(0,10);\n            return str + \"...\";\n        }else {\n            return userName\n        }\n    }\n\n    const animationInputIn = () => {\n        document.querySelector('.input-line').id = 'animation-input';\n    }\n    const animationInputOut = () => {\n        document.querySelector('.input-line').id = \"animation-input-out\"\n    }\n    const animationGameMode = () => {\n\n        setTopInfo(prev => prev - 25);\n\n       \n    }\n\n    const animationOpenRule = () => {\n        document.querySelector('.rules').id = \"rules-fade-in\";\n\n        setTimeout(() => {\n            document.querySelector('.close-rules-i').id = \"fade-in-cross\";\n        }, 800)\n    }\n\n    const animationCloseRule = () => {\n        document.querySelector('.close-rules-i').id = \"fade-out-cross\";\n\n        setTimeout(() => {\n            document.querySelector('.rules').id = \"rules-fade-out\"\n        }, 800)\n    } \n\n    useEffect(() => {\n        genrerateRandomNumber(filterGameMode())\n        setNumberPerLevel(filterGameMode())\n\n        document.querySelector('.listNumber').style.top = `-${topInfo}px`;\n        document.querySelector('.listNumber').style.transition = \".2s ease-in\";\n    }, [])\n\n    useEffect(() => {\n        if (numbersArray.length !== 0) {\n            if (numbersArray.length === userNumbersArray.length) {\n                let strNumber = numbersArray.join(\"\");\n                let strUserNumber = userNumbersArray.join(\"\");\n    \n                if (strNumber === strUserNumber) {\n\n                    setScores(Math.round(level * getFactorNumber())) //Подсчёт очков\n\n                    //Уровень успешно пройден\n                    setNumberPerLevel(prev => prev + 1); //Увеличение кол-ва повторений на 1 на первом уровне их 5\n                    setLevel(prev => prev + 1); //Увеличение показателя уровня на 1\n\n                    setProtectWall(true);\n                    clearsValues(); // Очистка данных что бы подготовить их к новому уровню\n\n                    lockButtons(); //Блокирование кнопок\n\n                    genrerateRandomNumber(numberPerLevel + 1);\n\n                    \n\n                    //setActivateSteps(false);\n                }else {\n                    //Поражение\n                    lockButtons();\n                    setProtectWall(true)\n\n                    clearsValues(); //Очитска данных что бы подготовить их к новой игре\n\n                    genrerateRandomNumber(filterGameMode());\n\n                    setNumberPerLevel(filterGameMode());\n\n                    document.querySelector('.lose-board').id = \"animate-lose-board\"; //Запуск анимации окна поражения\n                    setActivateSteps(false);\n                }\n                \n            }\n        }        \n    }, [userNumbersArray])\n\n\n    useEffect(() => {\n        if (numbersArray.length !== 0) {\n            if (step >= numbersArray.length) {\n                unlockButtons();\n                setProtectWall(false);\n            }\n        }\n        \n    }, [step]);\n\n    useEffect(() => {\n        if (activateSteps) {\n            setTimeout(() => {\n                showSequence();\n            }, 1000);\n        }\n    }, [activateSteps, step])\n\n    useEffect(() => {\n        if (topInfo < 0) {\n            setTopInfo(125)\n        }\n\n        document.querySelector('.listNumber').style.top = `-${topInfo}px`;\n        document.querySelector('.listNumber').style.transition = \".2s ease-in\";\n    }, [topInfo])\n\n    useEffect(() => {\n        clearsValues();\n        \n        setNumberPerLevel(filterGameMode())\n\n        genrerateRandomNumber(filterGameMode())\n    }, [gameMode])\n    return (\n        <div className=\"game\">\n                <LeaderBoard \n                    closeBoard={closeLeaderBoard} \n                />\n                <LoseBoard\n                    toHome={clickHome}\n                    toRestart={restartGame}\n                    scores={scores}\n                />\n                <Rules\n                    hide={animationCloseRule}\n                />\n                <div className=\"buttonPosition\">\n                    <div className=\"protect-wall\" style={{display: protectWall ? \"block\" : \"none\"}}>\n\n                    </div>\n                    <div className=\"interface\" style={{display: protect ? \"grid\" : \"none\"}}>\n                        <h1>Try again!</h1>\n                        <div className=\"enter-name\">\n                            <input \n                                type=\"text\" \n                                onFocus={animationInputIn} \n                                onBlur={animationInputOut}\n                                onChange={e => setUserName(e.target.value)} \n                                placeholder=\"Имя\" \n                            />\n                            <div className=\"input-line\"></div>\n                        </div>\n                        \n                        <div className=\"btn-position\">\n                            <button className=\"interface__btn\"  onClick={startGame}>\n                                Новая игра\n                                <div className=\"hover-line\"></div>\n                            </button>\n                            <button className=\"interface__btn\" onClick={() => changeGameMode(gameMode)}>\n                                <div className=\"numberMode\">\n                                Кол-во повторений: \n                                    <div className=\"number-window\">\n                                        <div className=\"listNumber\">\n                                            <div className=\"numberValues\">8</div>\n                                            <div className=\"numberValues\">7</div>\n                                            <div className=\"numberValues\">6</div>\n                                            <div className=\"numberValues\">5</div>\n                                            <div className=\"numberValues\">4</div>\n                                            <div className=\"numberValues\">3</div>\n                                        </div>\n\n                                    </div>\n                                </div>\n\n                                <div className=\"hover-line\"></div>\n                            </button>\n                            <button className=\"interface__btn top-ladder\" onClick={openLeaderBoard}>\n                                Таблица лидеров\n                                <div className=\"hover-line\"></div>\n                            </button>\n                            <button className=\"interface__btn\" onClick={animationOpenRule}>\n                                Правила\n                                <div className=\"hover-line\"></div>\n                            </button>\n                        </div>\n                        <a href=\"https://github.com/chopperqt\" rel=\"noreferrer\" target=\"_blank\" className=\"gitBtn\">\n                            <i class=\"bi-github\" role=\"img\" aria-label=\"GitHub\"></i>\n                        </a>\n                    </div>\n                    <div className=\"interface__text\">\n                        <h3>Уровень: {level}</h3>\n                        <h3>Очки: {scores === 1 ? \"0\" : scores}</h3>\n                        <h3>{filterName()}</h3>\n                    </div>\n                    <div className=\"interface__buttons\">\n                        <Button click={getNumberButton} value={1} color={\"rgb(248, 93, 93)\"} isActive={isRed} />\n                        <Button click={getNumberButton} value={2} color={\"rgba(0, 128, 0, 0.616)\"} isActive={isGreen} />\n                        <Button click={getNumberButton} value={3} color={\"rgba(0, 0, 255, 0.623)\"} isActive={isBlue} />\n                        <Button click={getNumberButton} value={4} color={\"rgba(224, 224, 2, 0.849)\"} isActive={isYellow} />\n                    </div> \n                </div>    \n        </div>\n    );\n}\n \nexport default Game;","import Button from './Button';\n\nexport default Button;","import {useState, useEffect} from 'react';\n\nimport './style.scss';\n\nconst Button = ({\n    color,\n    isActive,\n    value,\n    click\n}) => {\n\n    return (\n        <div>\n            <button\n                onClick={(e) => click(e)}\n                value={value}\n                className=\"colorButton\" \n                style={{background: color}} \n                disabled={isActive}></button>\n        </div>\n        \n    );\n}\n \nexport default Button;","import LeaderBoard from './LeaderBoard';\n\nexport default LeaderBoard;","const LeaderBoard = ({\n    closeBoard\n}) => {\n    return (\n        <div className=\"leader-board\">\n            <div className=\"leader-board-wrap\">\n                <button className=\"close__leader\" onClick={closeBoard}>\n                    <span className=\"linearicons-cross close__leader_i\"></span>\n                </button>\n                <div className=\"leaders\">\n                    <div>\n                        <h1 style={{fontWeight: '400'}}>Таблица ледеров</h1>\n                    </div>\n                    <div className=\"leader\">\n                        <p>Имя:</p>\n                        <p class=\"balls\">Очки:</p>   \n                    </div>\n                    <div className=\"leader leader__one\">\n                        <p><span className=\"linearicons-crown\"></span> 1. Аноним </p>\n                        <p class=\"balls\">0</p>\n                    </div>\n                    <div className=\"leader leader__two\">\n                        <p><span className=\"linearicons-crown\"></span>2. Аноним </p>\n                        <p class=\"balls\">0</p>\n                    </div>\n                    <div className=\"leader leader__three\">\n                        <p ><span className=\"linearicons-crown\"></span>3. Аноним</p>\n                        <p class=\"balls\">0</p>\n                    </div>\n                    <div className=\"leader\">\n                        <p>5. Аноним </p>\n                        <p class=\"balls\">0</p>\n                    </div>\n                    <div className=\"leader\">\n                        <p>6. Аноним </p>\n                        <p class=\"balls\">0</p>\n                    </div>\n                    <div className=\"leader\">\n                        <p>7. Аноним </p>\n                        <p class=\"balls\">0</p>\n                    </div>\n                    <div className=\"leader\">\n                        <p>8. Аноним </p>\n                        <p class=\"balls\">0</p>\n                    </div>\n                    <div className=\"leader\">\n                        <p>9. Аноним </p>\n                        <p class=\"balls\">0</p>\n                    </div>\n                    <div className=\"leader\">\n                        <p>10. Аноним</p>\n                        <p class=\"balls\">0</p>\n                    </div>\n                </div>\n            </div>       \n        </div>\n    );\n}\n \nexport default LeaderBoard;","import LoseBoard from './LoseBoard';\n\nexport default LoseBoard;","const LoseBoard = ({\n    toHome,\n    toRestart,\n    scores\n}) => {\n    return (\n        <div className=\"lose-board\">\n            <div className=\"lose-board__text\">\n                <h1>Поражение!</h1>\n                <h2>Очки: {scores === 1 ?  0 : scores}</h2>\n                <div className=\"lose-board__buttons\">\n                    <button onClick={toHome} className=\"lose-board__btn homeBtn\">\n                        <span className=\"linearicons-home icon\"></span>\n                    </button>\n                    <button onClick={toRestart} className=\"lose-board__btn restartBtn\">\n                        <span className=\" linearicons-redo2\"></span>\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n \nexport default LoseBoard;","import Rules from './Rules';\n\nexport default Rules;","import './style.scss';\n\nconst Rules = ({\n    hide\n}) => {\n    return (\n        <div className=\"rules\">\n            <button className=\"close__rules\" onClick={hide}>\n                <span className=\"linearicons-cross close-rules-i\"></span>\n            </button>\n            <div className=\"rules-wrap\">\n                <div className=\"rules-text\">\n                    <div className=\"circle-number red\">\n                        1\n                    </div>\n                    <p>Вы должны запомнить последовательность загарающихся кнопок</p>\n                </div>\n                <div className=\"rules-text\">\n                    <div className=\"circle-number green\">\n                        2\n                    </div>\n                    <p>Как только последовательность закончится, кнопки станут доступными для нажатия.</p>\n                </div>\n                <div className=\"rules-text\">\n                    <div className=\"circle-number blue\">\n                        3\n                    </div>\n                    <p>Нажимайте кнопки согласно последовательности.</p>\n                </div>\n                <div className=\"rules-text\">\n                    <div className=\"circle-number yellow\">\n                        4\n                    </div>\n                    <p>Если ваша последовательность совпадёт с показанной, вы перейдёте на следующий уровень.</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n \nexport default Rules;","import './App.css';\n\nimport {\n  Game\n} from './Components'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/linearicons.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}